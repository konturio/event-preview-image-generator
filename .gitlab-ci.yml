stages:
  - build-images
  - deploy

variables:
  NEXUS_HOST: nexus.kontur.io:8085
  KUBECFG_FILE: ./helm/kubeconfig.yml
  CERT_AUTH: ${K8S_CERT_AUTH}
  CLIENT_CERT: ${K8S_CLIENT_CERT_DEV}
  CLIENT_KEY: ${K8S_CLIENT_KEY_DEV}

.kaniko-build-template: &kaniko-build-template
  variables:
    KANIKO_ARGS: ""
  stage: build-images
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    # Nexus registry auth
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${NEXUS_HOST}\":{\"auth\":\"$(printf "%s:%s" "${NEXUS_DEPLOYER}" "${NEXUS_DEPLOYER_PASS}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    # Compose docker tag name
    # Git Branch/Tag to Docker Image Tag Mapping
    #   * Default Branch: main -> latest
    #   * Branch: feature/my-feature -> branch-feature-my-feature
    #   * Tag: v1.0.0/beta2 -> v1.0.0-beta2
    - |
      if [ "${CI_COMMIT_REF_NAME}" = ${CI_DEFAULT_BRANCH} ]; then
        VERSION="latest"
      elif [ -n "${CI_COMMIT_TAG}" ];then
        NOSLASH=$(echo "${CI_COMMIT_TAG}" | tr -s / - )
        SANITIZED="${NOSLASH//[^a-zA-Z0-9\-\.]/}"
        VERSION="${SANITIZED}"
      else \
        NOSLASH=$(echo "${CI_COMMIT_REF_NAME}" | tr -s / - )
        SANITIZED="${NOSLASH//[^a-zA-Z0-9\-]/}"
        VERSION="branch-${SANITIZED}"
      fi
    - echo version=${VERSION}
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/${CONTEXT}"
      --dockerfile "${CI_PROJECT_DIR}/${CONTEXT}/Dockerfile"
      --destination "${NEXUS_HOST}/konturdev/${NAME}:${VERSION}"
      ${KANIKO_ARGS}

.base_deploy: &base_deploy
  stage: deploy
  variables:
    USER: ${STAGE}-epig@kontur.io
  script:
  - KUBECTL_OPTS="--kubeconfig ${KUBECFG_FILE} -n ${STAGE}-epig"
  - kubectl --context ${STAGE} ${KUBECTL_OPTS} config set clusters.${STAGE}.certificate-authority-data ${CERT_AUTH}
  - kubectl --context ${STAGE} ${KUBECTL_OPTS} config set users.${USER}.client-key-data ${CLIENT_KEY}
  - kubectl --context ${STAGE} ${KUBECTL_OPTS} config set users.${USER}.client-certificate-data ${CLIENT_CERT}
  - helm --kube-context ${STAGE} ${KUBECTL_OPTS} upgrade epig ./helm --install --values=./helm/values.yml --values=./helm/values/values-${STAGE}.yml -n ${STAGE}-epig --create-namespace

build-chromium-headless:
  <<: *kaniko-build-template
  variables:
    NAME: chromium-headless
    CONTEXT: chromium-headless

build-preview-generator:
  <<: *kaniko-build-template
  variables:
    NAME: preview-generator
    CONTEXT: preview-generator

deploy-dev:
  <<: *base_deploy
  variables:
    STAGE: dev
  rules:
    - when: manual
#    - if: ${CI_COMMIT_BRANCH} == 'main'

